#!/bin/sh

: << =cut

=head1 NAME

Process memory - Plugin to measure process memory usage.

=cut

get_memory_usage()
{
  keyword=$1
  os=$2
  sum=0
  case $os in
  "Linux")
    pids=$(pgrep -f -i "$keyword")
  ;;
  "Darwin")
    pids=$(pgrep -i "$keyword")
  ;;
  *)
    echo '0'
    return
  esac
  for pid in $pids
  do
    sum=$((sum+$(ps -o rss= -p "$pid")*1024))
  done
  echo $sum;
  return
}

get_total_memory()
{
  os="$(get_os)"
  case $os in
  "Linux")
    free | awk '/Mem/ {print $2 * 1024}'
  ;;
  "Darwin")
    sysctl -n hw.memsize
  ;;
  *)
    echo '0'
  esac
}

get_os()
{
  os=$(uname -s | awk -F '_' '{print $1}')
  if [ "$os" = 'Darwin' ]; then
    echo 'Darwin'
  elif [ "$os" = 'Linux' ]; then
    echo 'Linux'
  elif [ "$os" = 'MINGW64_NT' ]; then
    echo 'WINNT'
  else
    echo 'Unknown'
  fi
}


process=${0##*/pmem_}

if [ "$1" = "autoconf" ]; then
        echo yes
        exit 0
fi

if [ "$1" = "config" ]; then
        echo "graph_title $process Memory Usage"
        echo 'graph_vlabel Bytes'
        echo 'graph_args --base 1024 -l 0'
        echo 'graph_category proc-memory'
        echo 'mem.label usage'
        echo 'mem.draw AREA'
        echo 'total.label total'
        echo 'total.draw LINE'
        exit 0
fi

os="$(get_os)"
echo "mem.value $(get_memory_usage "$process" "$os")"
echo "total.value $(get_total_memory "$os")"