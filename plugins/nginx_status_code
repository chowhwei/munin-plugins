#!/bin/sh

: << =cut

=head1 NAME

Nginx status code - Plugin to measure nginx status code

=cut

get_http_status()
{
  log_file=${1:-"/var/log/nginx/access.log"}
  step_file=${2:-"/dev/shm/nginx_status_code_step"}

  # 23/Feb/2024:10:54:27 获得最新一条日志的时间
  now=$(tail -1 /var/log/nginx/access.log | grep -ioE "[0-9]{2}\/[a-z]{3}\/[0-9]{4}:[0-9]{2}:[0-9]{2}:[0-9]{2}")
  # 23/Feb/2024:10:54:27 获得10万之前的一条日志的时间，看这段时间之间是否超过了10万条，实际上 last_ml - now 之间不足10万条
  last_ml=$(tail -100000 "$log_file" | sed -n 1p | grep -ioE "[0-9]{2}\/[a-z]{3}\/[0-9]{4}:[0-9]{2}:[0-9]{2}:[0-9]{2}")

  # 找不到文件，直接统计10万
  if [ ! -f "$step_file" ]; then
    tail -100000 "$log_file" | grep -ioE "HTTP\/[1|2]\.[1|0]\"[[:blank:]][0-9]{3}" | awk '{print $2}' | sort | uniq -c
    echo "$now" > "$step_file"
    return
  fi

  last=$(cat "$step_file")

  #取上条日志或max_line的第一条日志
  if [ "$(date -d "$(echo "$last" | sed -e 's,/,-,g' -e 's,:, ,')" +"%s")" -lt "$(date -d "$(echo "$last_ml" | sed -e 's,/,-,g' -e 's,:, ,')" +"%s")" ]; then
    last="$last_ml"
  fi

  tail -150000 "$log_file" | sed -n /"$(echo "$last" | sed -e 's/\//\\\//g')"/,/"$(echo "$now" | sed -e 's/\//\\\//g')"/p | grep -ioE "HTTP\/[1|2]\.[1|0]\"[[:blank:]][0-9]{3}" | awk '{print $2}' | sort | uniq -c
  echo "$now" > "$step_file"
}

if [ "$1" = "autoconf" ]; then
        echo yes
        exit 0
fi

if [ "$1" = "config" ]; then
        echo "graph_title Nginx status code"
        echo 'graph_vlabel %'
        echo 'graph_args --base 1000 -l 0'
        echo 'graph_category nginx-status-code'
        echo 's100.label 1XX'
        echo 's100.draw AREA'
        echo 's200.label 2XX'
        echo 's200.draw STACK'
        echo 's300.label 3XX'
        echo 's300.draw STACK'
        echo 's400.label 4XX'
        echo 's400.draw STACK'
        echo 's500.label 5XX'
        echo 's500.draw STACK'
        exit 0
fi

get_http_status "$@" | awk 'BEGIN{
  i=j=k=l=m=0;
}
{
  if($2 >= 100 && $2 < 200){
    i+=$1
  }else if($2 >= 200 && $2 < 300){
    j+=$1
  }else if($2 >= 300 && $2 < 400){
    k+=$1
  }else if($2 >= 400 && $2 < 500){
    l+=$1
  }else if($2 >= 500){
    m+=$1
  }
}END{
  t=i+j+k+l+m;
  if(t==0){
    t=1
  }
  printf("s100.value %.2f\n", i * 100/t);
  printf("s200.value %.2f\n", j * 100/t);
  printf("s300.value %.2f\n", k * 100/t);
  printf("s400.value %.2f\n", l * 100/t);
  printf("s500.value %.2f\n", m * 100/t);
}'