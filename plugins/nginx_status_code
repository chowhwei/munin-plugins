#!/bin/sh

: << =cut

=head1 NAME

Nginx status code - Plugin to measure nginx status code

=cut

get_http_status()
{
  log_file=${1:-"/var/log/nginx/access.log"}
  max_lines=${2:-"100000"}
  extend_lines=${3:-"150000"}  # 是 max_lines 1.5 倍
  step_file=${4:-"/dev/shm/nginx_status_code_step"}

  # 23/Feb/2024:10:54:27 获得最新一条日志的时间
  now=$(tail -1 /var/log/nginx/access.log | grep -ioE "[0-9]{2}\/[a-z]{3}\/[0-9]{4}:[0-9]{2}:[0-9]{2}:[0-9]{2}")
  # 23/Feb/2024:10:54:27 获得10万之前的一条日志的时间，看这段时间之间是否超过了10万条，实际上 last_ml - now 之间不足10万条
  last_ml=$(tail -"$max_lines" "$log_file" | sed -n 1p | grep -ioE "[0-9]{2}\/[a-z]{3}\/[0-9]{4}:[0-9]{2}:[0-9]{2}:[0-9]{2}")

  # 找不到文件，直接统计10万
  if [ ! -f "$step_file" ]; then
    tail -"$max_lines" "$log_file" | grep -ioE "HTTP\/[1|2]\.[1|0]\"[[:blank:]][0-9]{3}" | awk '{print $2}' | sort | uniq -c
    echo "$now" > "$step_file"
    return
  fi

  last=$(cat "$step_file")

  #取上条日志或max_line的第一条日志
  if [ "$(date -d "$(echo "$last" | sed -e 's,/,-,g' -e 's,:, ,')" +"%s")" -lt "$(date -d "$(echo "$last_ml" | sed -e 's,/,-,g' -e 's,:, ,')" +"%s")" ]; then
    last="$last_ml"
  fi

  tail -"$extend_lines" "$log_file" | sed -n /"$(echo "$last" | sed -e 's/\//\\\//g')"/,/"$(echo "$now" | sed -e 's/\//\\\//g')"/p | grep -ioE "HTTP\/[1|2]\.[1|0]\"[[:blank:]][0-9]{3}" | awk '{print $2}' | sort | uniq -c
  echo "$now" > "$step_file"
}

if [ "$1" = "autoconf" ]; then
        echo yes
        exit 0
fi

if [ "$1" = "config" ]; then
        echo "graph_title Nginx status code"
        echo 'graph_vlabel % (v2.0.240326)'
        echo 'graph_args --upper-limit 100 -l 0'
        echo 'graph_category nginx-status-code'
        echo 's1XX.label 1XX'
        echo 's1XX.draw AREA'
        echo 's200.label 200 OK'
        echo 's200.draw STACK'
        echo 's2XX.label 2XX'
        echo 's2XX.draw STACK'
        echo 's301.label 301 Moved Permanently'
        echo 's301.draw STACK'
        echo 's302.label 302 Found'
        echo 's302.draw STACK'
        echo 's304.label 304 Not Modified'
        echo 's304.draw STACK'
        echo 's3XX.label 3XX'
        echo 's3XX.draw STACK'
        echo 's403.label 403 Forbidden'
        echo 's403.draw STACK'
        echo 's404.label 404 Not Found'
        echo 's404.draw STACK'
        echo 's429.label 429 Too Many Requests'
        echo 's429.draw STACK'
        echo 's4XX.label 4XX'
        echo 's4XX.draw STACK'
        echo 's500.label 500 Internal Server Error'
        echo 's500.draw STACK'
        echo 's502.label 502 Bad Gateway'
        echo 's502.draw STACK'
        echo 's504.label 504 Gateway Timeout'
        echo 's504.draw STACK'
        echo 's5XX.label 5XX'
        echo 's5XX.draw STACK'
        echo 'sXXX.label XXX'
        echo 'sXXX.draw STACK'
        exit 0
fi

get_http_status "$@" | awk 'BEGIN{
  r1xx=r200=r2xx=r301=r302=r304=r3xx=r403=r404=r429=r4xx=r500=r502=r504=r5xx=rxxx=total=0;
}
{
  total+=$1
  if($2 >= 100 && $2 < 200){
    r1xx+=$1
  }else if($2 >= 200 && $2 < 300){
    if($2 == 200){
      r200+=$1
    }else{
      r2xx+=$1
    }
  }else if($2 >= 300 && $2 < 400){
    if($2 == 301){
      r301+=$1
    }else if($2 == 302){
      r302+=$1
    }else if($2 == 304){
      r304+=$1
    }else{
      r3xx+=$1
    }
  }else if($2 >= 400 && $2 < 500){
    if($2 == 403){
      r403+=$1
    }else if($2 == 404){
      r404+=$1
    }else if($2 == 429){
      r429+=$1
    }else{
      r4xx+=$1
    }
  }else if($2 >= 500){
    if($2 == 500){
      r500+=$1
    }else if($2 == 502){
      r502+=$1
    }else if($2 == 504){
      r504+=$1
    }else{
      r5xx+=$1
    }
  }else{
    rxxx+=$1
  }
}END{
  if(total==0){
    total=1
  }
  printf("s1XX.value %.2f\n", r1xx * 100/total);
  printf("s200.value %.2f\n", r200 * 100/total);
  printf("s2XX.value %.2f\n", r2xx * 100/total);
  printf("s301.value %.2f\n", r301 * 100/total);
  printf("s302.value %.2f\n", r302 * 100/total);
  printf("s304.value %.2f\n", r304 * 100/total);
  printf("s3XX.value %.2f\n", r3xx * 100/total);
  printf("s403.value %.2f\n", r403 * 100/total);
  printf("s404.value %.2f\n", r404 * 100/total);
  printf("s429.value %.2f\n", r429 * 100/total);
  printf("s4XX.value %.2f\n", r4xx * 100/total);
  printf("s500.value %.2f\n", r500 * 100/total);
  printf("s502.value %.2f\n", r502 * 100/total);
  printf("s504.value %.2f\n", r504 * 100/total);
  printf("s5XX.value %.2f\n", r5xx * 100/total);
  printf("sXXX.value %.2f\n", rxxx * 100/total);
}'