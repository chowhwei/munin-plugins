#!/bin/sh

: << =cut

=head1 NAME

Nginx status code - Plugin to measure nginx status code

=cut

get_http_status()
{
  log_file=${1:-"/var/log/nginx/access.log"}
  lines=${2:-"100000"}
  tail -"$lines" "$log_file" | grep -ioE "HTTP\/[1|2]\.[1|0]\"[[:blank:]][0-9]{3}" | awk '{print $2}' | sort | uniq -c
}

if [ "$1" = "autoconf" ]; then
        echo yes
        exit 0
fi

if [ "$1" = "config" ]; then
        echo "graph_title Nginx status code"
        echo 'graph_vlabel %'
        echo 'graph_args --base 1000 -l 0'
        echo 'graph_category nginx-status-code'
        echo 's100.label 1XX'
        echo 's100.draw AREA'
        echo 's200.label 2XX'
        echo 's200.draw STACK'
        echo 's300.label 3XX'
        echo 's300.draw STACK'
        echo 's400.label 4XX'
        echo 's400.draw STACK'
        echo 's500.label 5XX'
        echo 's500.draw STACK'
        exit 0
fi

get_http_status "$@" | awk '{
  if($2 >= 100 && $2 < 200){
    i=$1
  }else if($2 >= 200 && $2 < 300){
    j=$1
  }else if($2 >= 300 && $2 < 400){
    k=$1
  }else if($2 >= 400 && $2 < 500){
    l=$1
  }else if($2 >= 500){
    m=$1
  }
}END{
  t=i+j+k+l+m;
  printf("s100.value %.2f\n", (i?i:0) * 100/t);
  printf("s200.value %.2f\n", (j?j:0) * 100/t);
  printf("s300.value %.2f\n", (k?k:0) * 100/t);
  printf("s400.value %.2f\n", (l?l:0) * 100/t);
  printf("s500.value %.2f\n", (m?m:0) * 100/t);
}'